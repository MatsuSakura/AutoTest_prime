{"uid":"e0a362c59f7b9bcc","name":"test_run[2020-2]","fullName":"TestYear.Test#test_run","historyId":"446a94117506b28150ed88412ba71f3b","time":{"start":1665925791091,"stop":1665925791091,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 29 == 28","statusTrace":"self = <TestYear.Test object at 0x0000028E98272DD0>, year = 2020, month = 2\n\n    @pytest.mark.parametrize(\"year,month\", [(2022,2),(2020,2)])\n    def test_run(self,year,month):\n        result = year_month(year,month)\n>       assert result == 28\nE       assert 29 == 28\n\nTestYear.py:33: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setUp","time":{"start":1665925791090,"stop":1665925791090,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 29 == 28","statusTrace":"self = <TestYear.Test object at 0x0000028E98272DD0>, year = 2020, month = 2\n\n    @pytest.mark.parametrize(\"year,month\", [(2022,2),(2020,2)])\n    def test_run(self,year,month):\n        result = year_month(year,month)\n>       assert result == 28\nE       assert 29 == 28\n\nTestYear.py:33: AssertionError","steps":[],"attachments":[{"uid":"bef3b07da3a461b7","name":"stdout","source":"bef3b07da3a461b7.txt","type":"text/plain","size":20}],"parameters":[],"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"setUp::0","time":{"start":1665925791095,"stop":1665925791095,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"suite","value":"TestYear"},{"name":"subSuite","value":"Test"},{"name":"host","value":"DESKTOP-0AC7NBS"},{"name":"thread","value":"41744-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestYear"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"month","value":"2"},{"name":"year","value":"2020"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"e0a362c59f7b9bcc.json","parameterValues":["2","2020"]}